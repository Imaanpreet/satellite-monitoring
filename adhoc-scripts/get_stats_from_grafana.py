#!/usr/bin/env python3
# -*- coding: UTF-8 -*-

import argparse
import logging
import configparser
import requests
import statistics
import scipy.integrate
import tabulate
import json

parser = argparse.ArgumentParser(description='Get stats from Graphite/Grafana for given interval')
parser.add_argument('from_ts', type=int,
                    help='timestamp (UTC) of start of the interval')
parser.add_argument('to_ts', type=int,
                    help='timestamp (UTC) of end of the interval')
parser.add_argument('--inventory', default='conf/inventory.ini',
                    help='Inventory where is the Graphite server defined')
parser.add_argument('--chunk_size', type=int, default=10,
                    help='How many metrices to obtain from Grafana at one request')
parser.add_argument('--port', type=int, default=11202,
                    help='Port Grafana is listening on')
parser.add_argument('--prefix', default='satellite62',
                    help='Prefix for data in Graphite')
parser.add_argument('--file', default='/tmp/get_stats_from_grafana.json',
                    help='Save stats to this file')
parser.add_argument('--debug', action='store_true',
                    help='Debug mode')
args = parser.parse_args()

if args.debug:
    logging.basicConfig(level=logging.DEBUG)

logging.debug("Arguments: %s" % args)

# Metrics we are interested in and their aliases
targets = [
    ("alias(averageSeries($Cloud.$Node.cpu-*.cpu-system), 'System')", "CPU All -> C/N - All CPUs -> System"),
    ("alias(averageSeries($Cloud.$Node.cpu-*.cpu-user), 'User')", "CPU All -> C/N - All CPUs -> User"),
    ("alias(averageSeries($Cloud.$Node.cpu-*.cpu-nice), 'Nice')", "CPU All -> C/N - All CPUs -> Nice"),
    ("alias(averageSeries($Cloud.$Node.cpu-*.cpu-steal), 'Steal')", "CPU All -> C/N - All CPUs -> Steal"),
    ("alias(averageSeries($Cloud.$Node.cpu-*.cpu-softirq), 'SoftIRQ')", "CPU All -> C/N - All CPUs -> SoftIRQ"),
    ("alias(averageSeries($Cloud.$Node.cpu-*.cpu-interrupt), 'Interrupt')", "CPU All -> C/N - All CPUs -> Interrupt"),
    ("alias(averageSeries($Cloud.$Node.cpu-*.cpu-wait), 'Wait')", "CPU All -> C/N - All CPUs -> Wait"),
    ("alias(averageSeries($Cloud.$Node.cpu-*.cpu-idle), 'Idle')", "CPU All -> C/N - All CPUs -> Idle"),
    ("alias($Cloud.$Node.$cpus0.cpu-system, 'System')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> System"),
    ("alias($Cloud.$Node.$cpus0.cpu-user, 'User')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> User"),
    ("alias($Cloud.$Node.$cpus0.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Nice"),
    ("alias($Cloud.$Node.$cpus0.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Steal"),
    ("alias($Cloud.$Node.$cpus0.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus0.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus0.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Wait"),
    ("alias($Cloud.$Node.$cpus0.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Idle"),
    ("alias($Cloud.$Node.$cpus0.cpu-system, 'System')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> System"),
    ("alias($Cloud.$Node.$cpus0.cpu-user, 'User')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> User"),
    ("alias($Cloud.$Node.$cpus0.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Nice"),
    ("alias($Cloud.$Node.$cpus0.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Steal"),
    ("alias($Cloud.$Node.$cpus0.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus0.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus0.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Wait"),
    ("alias($Cloud.$Node.$cpus0.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Idle"),
    ("alias($Cloud.$Node.$cpus0.cpu-system, 'System')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> System"),
    ("alias($Cloud.$Node.$cpus0.cpu-user, 'User')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> User"),
    ("alias($Cloud.$Node.$cpus0.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Nice"),
    ("alias($Cloud.$Node.$cpus0.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Steal"),
    ("alias($Cloud.$Node.$cpus0.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus0.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus0.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Wait"),
    ("alias($Cloud.$Node.$cpus0.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Idle"),
    ("alias($Cloud.$Node.$cpus0.cpu-system, 'System')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> System"),
    ("alias($Cloud.$Node.$cpus0.cpu-user, 'User')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> User"),
    ("alias($Cloud.$Node.$cpus0.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Nice"),
    ("alias($Cloud.$Node.$cpus0.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Steal"),
    ("alias($Cloud.$Node.$cpus0.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus0.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus0.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Wait"),
    ("alias($Cloud.$Node.$cpus0.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Idle"),
    ("alias($Cloud.$Node.$cpus0.cpu-system, 'System')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> System"),
    ("alias($Cloud.$Node.$cpus0.cpu-user, 'User')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> User"),
    ("alias($Cloud.$Node.$cpus0.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Nice"),
    ("alias($Cloud.$Node.$cpus0.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Steal"),
    ("alias($Cloud.$Node.$cpus0.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus0.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus0.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Wait"),
    ("alias($Cloud.$Node.$cpus0.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Idle"),
    ("alias($Cloud.$Node.$cpus0.cpu-system, 'System')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> System"),
    ("alias($Cloud.$Node.$cpus0.cpu-user, 'User')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> User"),
    ("alias($Cloud.$Node.$cpus0.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Nice"),
    ("alias($Cloud.$Node.$cpus0.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Steal"),
    ("alias($Cloud.$Node.$cpus0.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus0.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus0.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Wait"),
    ("alias($Cloud.$Node.$cpus0.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Idle"),
    ("alias($Cloud.$Node.$cpus0.cpu-system, 'System')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> System"),
    ("alias($Cloud.$Node.$cpus0.cpu-user, 'User')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> User"),
    ("alias($Cloud.$Node.$cpus0.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Nice"),
    ("alias($Cloud.$Node.$cpus0.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Steal"),
    ("alias($Cloud.$Node.$cpus0.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus0.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus0.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Wait"),
    ("alias($Cloud.$Node.$cpus0.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Idle"),
    ("alias($Cloud.$Node.$cpus0.cpu-system, 'System')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> System"),
    ("alias($Cloud.$Node.$cpus0.cpu-user, 'User')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> User"),
    ("alias($Cloud.$Node.$cpus0.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Nice"),
    ("alias($Cloud.$Node.$cpus0.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Steal"),
    ("alias($Cloud.$Node.$cpus0.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus0.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus0.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Wait"),
    ("alias($Cloud.$Node.$cpus0.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Idle"),
    ("alias($Cloud.$Node.$cpus0.cpu-system, 'System')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> System"),
    ("alias($Cloud.$Node.$cpus0.cpu-user, 'User')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> User"),
    ("alias($Cloud.$Node.$cpus0.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Nice"),
    ("alias($Cloud.$Node.$cpus0.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Steal"),
    ("alias($Cloud.$Node.$cpus0.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus0.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus0.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Wait"),
    ("alias($Cloud.$Node.$cpus0.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Idle"),
    ("alias($Cloud.$Node.$cpus0.cpu-system, 'System')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> System"),
    ("alias($Cloud.$Node.$cpus0.cpu-user, 'User')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> User"),
    ("alias($Cloud.$Node.$cpus0.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Nice"),
    ("alias($Cloud.$Node.$cpus0.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Steal"),
    ("alias($Cloud.$Node.$cpus0.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus0.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus0.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Wait"),
    ("alias($Cloud.$Node.$cpus0.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (0-9) -> C/N - $cpus0 -> Idle"),
    ("alias($Cloud.$Node.$cpus00.cpu-system, 'System')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> System"),
    ("alias($Cloud.$Node.$cpus00.cpu-user, 'User')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> User"),
    ("alias($Cloud.$Node.$cpus00.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Nice"),
    ("alias($Cloud.$Node.$cpus00.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Steal"),
    ("alias($Cloud.$Node.$cpus00.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus00.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus00.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Wait"),
    ("alias($Cloud.$Node.$cpus00.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Idle"),
    ("alias($Cloud.$Node.$cpus00.cpu-system, 'System')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> System"),
    ("alias($Cloud.$Node.$cpus00.cpu-user, 'User')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> User"),
    ("alias($Cloud.$Node.$cpus00.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Nice"),
    ("alias($Cloud.$Node.$cpus00.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Steal"),
    ("alias($Cloud.$Node.$cpus00.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus00.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus00.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Wait"),
    ("alias($Cloud.$Node.$cpus00.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Idle"),
    ("alias($Cloud.$Node.$cpus00.cpu-system, 'System')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> System"),
    ("alias($Cloud.$Node.$cpus00.cpu-user, 'User')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> User"),
    ("alias($Cloud.$Node.$cpus00.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Nice"),
    ("alias($Cloud.$Node.$cpus00.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Steal"),
    ("alias($Cloud.$Node.$cpus00.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus00.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus00.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Wait"),
    ("alias($Cloud.$Node.$cpus00.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Idle"),
    ("alias($Cloud.$Node.$cpus00.cpu-system, 'System')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> System"),
    ("alias($Cloud.$Node.$cpus00.cpu-user, 'User')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> User"),
    ("alias($Cloud.$Node.$cpus00.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Nice"),
    ("alias($Cloud.$Node.$cpus00.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Steal"),
    ("alias($Cloud.$Node.$cpus00.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus00.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus00.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Wait"),
    ("alias($Cloud.$Node.$cpus00.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Idle"),
    ("alias($Cloud.$Node.$cpus00.cpu-system, 'System')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> System"),
    ("alias($Cloud.$Node.$cpus00.cpu-user, 'User')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> User"),
    ("alias($Cloud.$Node.$cpus00.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Nice"),
    ("alias($Cloud.$Node.$cpus00.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Steal"),
    ("alias($Cloud.$Node.$cpus00.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus00.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus00.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Wait"),
    ("alias($Cloud.$Node.$cpus00.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Idle"),
    ("alias($Cloud.$Node.$cpus00.cpu-system, 'System')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> System"),
    ("alias($Cloud.$Node.$cpus00.cpu-user, 'User')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> User"),
    ("alias($Cloud.$Node.$cpus00.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Nice"),
    ("alias($Cloud.$Node.$cpus00.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Steal"),
    ("alias($Cloud.$Node.$cpus00.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus00.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus00.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Wait"),
    ("alias($Cloud.$Node.$cpus00.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Idle"),
    ("alias($Cloud.$Node.$cpus00.cpu-system, 'System')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> System"),
    ("alias($Cloud.$Node.$cpus00.cpu-user, 'User')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> User"),
    ("alias($Cloud.$Node.$cpus00.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Nice"),
    ("alias($Cloud.$Node.$cpus00.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Steal"),
    ("alias($Cloud.$Node.$cpus00.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus00.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus00.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Wait"),
    ("alias($Cloud.$Node.$cpus00.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Idle"),
    ("alias($Cloud.$Node.$cpus00.cpu-system, 'System')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> System"),
    ("alias($Cloud.$Node.$cpus00.cpu-user, 'User')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> User"),
    ("alias($Cloud.$Node.$cpus00.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Nice"),
    ("alias($Cloud.$Node.$cpus00.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Steal"),
    ("alias($Cloud.$Node.$cpus00.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus00.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus00.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Wait"),
    ("alias($Cloud.$Node.$cpus00.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Idle"),
    ("alias($Cloud.$Node.$cpus00.cpu-system, 'System')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> System"),
    ("alias($Cloud.$Node.$cpus00.cpu-user, 'User')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> User"),
    ("alias($Cloud.$Node.$cpus00.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Nice"),
    ("alias($Cloud.$Node.$cpus00.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Steal"),
    ("alias($Cloud.$Node.$cpus00.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus00.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus00.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Wait"),
    ("alias($Cloud.$Node.$cpus00.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Idle"),
    ("alias($Cloud.$Node.$cpus00.cpu-system, 'System')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> System"),
    ("alias($Cloud.$Node.$cpus00.cpu-user, 'User')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> User"),
    ("alias($Cloud.$Node.$cpus00.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Nice"),
    ("alias($Cloud.$Node.$cpus00.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Steal"),
    ("alias($Cloud.$Node.$cpus00.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus00.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus00.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Wait"),
    ("alias($Cloud.$Node.$cpus00.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Idle"),
    ("alias($Cloud.$Node.$cpus00.cpu-system, 'System')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> System"),
    ("alias($Cloud.$Node.$cpus00.cpu-user, 'User')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> User"),
    ("alias($Cloud.$Node.$cpus00.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Nice"),
    ("alias($Cloud.$Node.$cpus00.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Steal"),
    ("alias($Cloud.$Node.$cpus00.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus00.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus00.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Wait"),
    ("alias($Cloud.$Node.$cpus00.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Idle"),
    ("alias($Cloud.$Node.$cpus00.cpu-system, 'System')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> System"),
    ("alias($Cloud.$Node.$cpus00.cpu-user, 'User')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> User"),
    ("alias($Cloud.$Node.$cpus00.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Nice"),
    ("alias($Cloud.$Node.$cpus00.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Steal"),
    ("alias($Cloud.$Node.$cpus00.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus00.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus00.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Wait"),
    ("alias($Cloud.$Node.$cpus00.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Idle"),
    ("alias($Cloud.$Node.$cpus00.cpu-system, 'System')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> System"),
    ("alias($Cloud.$Node.$cpus00.cpu-user, 'User')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> User"),
    ("alias($Cloud.$Node.$cpus00.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Nice"),
    ("alias($Cloud.$Node.$cpus00.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Steal"),
    ("alias($Cloud.$Node.$cpus00.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus00.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus00.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Wait"),
    ("alias($Cloud.$Node.$cpus00.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Idle"),
    ("alias($Cloud.$Node.$cpus00.cpu-system, 'System')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> System"),
    ("alias($Cloud.$Node.$cpus00.cpu-user, 'User')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> User"),
    ("alias($Cloud.$Node.$cpus00.cpu-nice, 'Nice')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Nice"),
    ("alias($Cloud.$Node.$cpus00.cpu-steal, 'Steal')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Steal"),
    ("alias($Cloud.$Node.$cpus00.cpu-softirq, 'SoftIRQ')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> SoftIRQ"),
    ("alias($Cloud.$Node.$cpus00.cpu-interrupt, 'Interrupt')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Interrupt"),
    ("alias($Cloud.$Node.$cpus00.cpu-wait, 'Wait')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Wait"),
    ("alias($Cloud.$Node.$cpus00.cpu-idle, 'Idle')", "Per CPU Logical CPU Core (10-99) -> C/N - $cpus00 -> Idle"),
    ("alias($Cloud.$Node.memory.memory-slab_unrecl, 'Slab Unrecl')", "Memory & Swap -> C/N - Memory in Bytes -> Slab Unrecl"),
    ("alias($Cloud.$Node.memory.memory-used, 'Used')", "Memory & Swap -> C/N - Memory in Bytes -> Used"),
    ("alias($Cloud.$Node.memory.memory-buffered, 'Buffered')", "Memory & Swap -> C/N - Memory in Bytes -> Buffered"),
    ("alias($Cloud.$Node.memory.memory-slab_recl, 'Slab Recl')", "Memory & Swap -> C/N - Memory in Bytes -> Slab Recl"),
    ("alias($Cloud.$Node.memory.memory-cached, 'Cached')", "Memory & Swap -> C/N - Memory in Bytes -> Cached"),
    ("alias($Cloud.$Node.memory.memory-free, 'Free')", "Memory & Swap -> C/N - Memory in Bytes -> Free"),
    ("$Cloud.$Node.memory.memory-slab_unrecl", "Memory & Swap -> C/N - Memory in Percentage -> $Cloud.$Node.memory.memory-slab_unrecl"),
    ("$Cloud.$Node.memory.memory-used", "Memory & Swap -> C/N - Memory in Percentage -> $Cloud.$Node.memory.memory-used"),
    ("$Cloud.$Node.memory.memory-buffered", "Memory & Swap -> C/N - Memory in Percentage -> $Cloud.$Node.memory.memory-buffered"),
    ("$Cloud.$Node.memory.memory-slab_recl", "Memory & Swap -> C/N - Memory in Percentage -> $Cloud.$Node.memory.memory-slab_recl"),
    ("$Cloud.$Node.memory.memory-cached", "Memory & Swap -> C/N - Memory in Percentage -> $Cloud.$Node.memory.memory-cached"),
    ("$Cloud.$Node.memory.memory-free", "Memory & Swap -> C/N - Memory in Percentage -> $Cloud.$Node.memory.memory-free"),
    ("alias($Cloud.$Node.swap.swap-used, 'Used')", "Memory & Swap -> C/N - Swap Usage -> Used"),
    ("alias($Cloud.$Node.swap.swap-cached, 'Cached')", "Memory & Swap -> C/N - Swap Usage -> Cached"),
    ("alias($Cloud.$Node.swap.swap-free, 'Free')", "Memory & Swap -> C/N - Swap Usage -> Free"),
    ("alias($Cloud.$Node.swap.swap_io-in, 'In')", "Memory & Swap -> C/N - Swap IO -> In"),
    ("alias($Cloud.$Node.swap.swap_io-out, 'Out')", "Memory & Swap -> C/N - Swap IO -> Out"),
    ("alias($Cloud.$Node.$Disk.disk_ops.read, 'Read')", "Disk -> C/N - $Disk iops -> Read"),
    ("alias($Cloud.$Node.$Disk.disk_ops.write, 'Write')", "Disk -> C/N - $Disk iops -> Write"),
    ("alias($Cloud.$Node.$Disk.disk_octets.read, 'Read')", "Disk -> C/N - $Disk Throughput -> Read"),
    ("alias($Cloud.$Node.$Disk.disk_octets.write, 'Write')", "Disk -> C/N - $Disk Throughput -> Write"),
    ("alias($Cloud.$Node.$Disk.disk_merged.read, 'Read')", "Disk -> C/N - $Disk Merged iops -> Read"),
    ("alias($Cloud.$Node.$Disk.disk_merged.write, 'Write')", "Disk -> C/N - $Disk Merged iops -> Write"),
    ("alias($Cloud.$Node.$Disk.pending_operations, 'Pending Ops')", "Disk -> C/N - $Disk Pending Operations -> Pending Ops"),
    ("alias($Cloud.$Node.$Disk.disk_time.read, 'Read')", "Disk -> C/N - $Disk Average Time (Estimated) -> Read"),
    ("alias($Cloud.$Node.$Disk.disk_time.write, 'Write')", "Disk -> C/N - $Disk Average Time (Estimated) -> Write"),
    ("alias(scale($Cloud.$Node.$Disk.disk_io_time.io_time, 0.1), 'Time')", "Disk -> C/N - $Disk IO Time -> Time"),
    ("alias($Cloud.$Node.$Disk.disk_io_time.weighted_io_time, 'Weighted Time')", "Disk -> C/N - $Disk IO Time -> Weighted Time"),
    ("alias($Cloud.$Node.df-root.percent_bytes-reserved, 'Reserved')", "Disk -> C/N - / Partition Capacity -> Reserved"),
    ("alias($Cloud.$Node.df-root.percent_bytes-used, 'Used')", "Disk -> C/N - / Partition Capacity -> Used"),
    ("alias($Cloud.$Node.df-root.percent_bytes-free, 'Free')", "Disk -> C/N - / Partition Capacity -> Free"),
    ("alias($Cloud.$Node.$Interface.if_packets.tx, 'TX')", "Network -> C/N - $Interface Network IO -> TX"),
    ("alias($Cloud.$Node.$Interface.if_packets.rx, 'RX')", "Network -> C/N - $Interface Network IO -> RX"),
    ("alias(scale($Cloud.$Node.$Interface.if_octets.tx, 8), 'TX')", "Network -> C/N - $Interface Network Throughput -> TX"),
    ("alias(scale($Cloud.$Node.$Interface.if_octets.rx, 8), 'RX')", "Network -> C/N - $Interface Network Throughput -> RX"),
    ("alias($Cloud.$Node.$Interface.if_errors.tx, 'TX')", "Network -> C/N - $Interface Errors -> TX"),
    ("alias($Cloud.$Node.$Interface.if_errors.rx, 'RX')", "Network -> C/N - $Interface Errors -> RX"),
    ("aliasByNode(scale(aliasSub($Cloud.$Node.turbostat-cpu*.gauge-TSC, 'turbostat-', 'tsc-'), 1000000), 2)", "Turbostat -> C/N - Gauge TSC & SMI Count -> aliasByNode(scale(aliasSub($Cloud.$Node.turbostat-cpu*.gauge-TSC, 'turbostat-', 'tsc-'), 1000000), 2)"),
    ("aliasByNode(scale(aliasSub($Cloud.$Node.turbostat-cpu*.frequency-average, 'turbostat-', ''), 1000000), 2)", "Turbostat -> C/N - turbostat Freq Avg -> aliasByNode(scale(aliasSub($Cloud.$Node.turbostat-cpu*.frequency-average, 'turbostat-', ''), 1000000), 2)"),
    ("aliasByNode(scale($Cloud.$Node.turbostat-cpu*.frequency-busy, 1000000), 2)", "Turbostat -> C/N - turbostat Freq Busy -> aliasByNode(scale($Cloud.$Node.turbostat-cpu*.frequency-busy, 1000000), 2)"),
    ("aliasByNode($Cloud.$Node.turbostat-cpu*.percent-c0, 2)", "Turbostat -> C/N - turbostat c0% -> aliasByNode($Cloud.$Node.turbostat-cpu*.percent-c0, 2)"),
    ("aliasByNode($Cloud.$Node.turbostat-cpu*.percent-c1, 2)", "Turbostat -> C/N - turbostat c1% -> aliasByNode($Cloud.$Node.turbostat-cpu*.percent-c1, 2)"),
    ("aliasByNode(aliasSub(aliasSub($Cloud.$Node.numa-*.vmpage_action-interleave_hit, 'numa-', ''), 'vmpage_action-', ''), 2, 3)", "Numa -> C/N - Numastat -> aliasByNode(aliasSub(aliasSub($Cloud.$Node.numa-*.vmpage_action-interleave_hit, 'numa-', ''), 'vmpage_action-', ''), 2, 3)"),
    ("aliasByNode(aliasSub(aliasSub($Cloud.$Node.numa-*.vmpage_action-local_node, 'numa-', ''), 'vmpage_action-', ''), 2, 3)", "Numa -> C/N - Numastat -> aliasByNode(aliasSub(aliasSub($Cloud.$Node.numa-*.vmpage_action-local_node, 'numa-', ''), 'vmpage_action-', ''), 2, 3)"),
    ("aliasByNode(aliasSub(aliasSub($Cloud.$Node.numa-*.vmpage_action-numa_foreign, 'numa-', ''), 'vmpage_action-', ''), 2, 3)", "Numa -> C/N - Numastat -> aliasByNode(aliasSub(aliasSub($Cloud.$Node.numa-*.vmpage_action-numa_foreign, 'numa-', ''), 'vmpage_action-', ''), 2, 3)"),
    ("aliasByNode(aliasSub(aliasSub($Cloud.$Node.numa-*.vmpage_action-numa_hit, 'numa-', ''), 'vmpage_action-', ''), 2, 3)", "Numa -> C/N - Numastat -> aliasByNode(aliasSub(aliasSub($Cloud.$Node.numa-*.vmpage_action-numa_hit, 'numa-', ''), 'vmpage_action-', ''), 2, 3)"),
    ("aliasByNode(aliasSub(aliasSub($Cloud.$Node.numa-*.vmpage_action-numa_miss, 'numa-', ''), 'vmpage_action-', ''), 2, 3)", "Numa -> C/N - Numastat -> aliasByNode(aliasSub(aliasSub($Cloud.$Node.numa-*.vmpage_action-numa_miss, 'numa-', ''), 'vmpage_action-', ''), 2, 3)"),
    ("aliasByNode(aliasSub(aliasSub($Cloud.$Node.numa-*.vmpage_action-other_node, 'numa-', ''), 'vmpage_action-', ''), 2, 3)", "Numa -> C/N - Numastat -> aliasByNode(aliasSub(aliasSub($Cloud.$Node.numa-*.vmpage_action-other_node, 'numa-', ''), 'vmpage_action-', ''), 2, 3)"),
    ("aliasByNode(aliasSub($Cloud.$Node.irq.irq-[A-Z]*, 'irq-', ''), 3)", "IRQ -> C/N - IRQ -> aliasByNode(aliasSub($Cloud.$Node.irq.irq-[A-Z]*, 'irq-', ''), 3)"),
    ("alias($Cloud.$Node.load.load.shortterm, '1m avg')", "Load / Uptime -> C/N - Load Averages / Uptime -> 1m avg"),
    ("alias($Cloud.$Node.load.load.midterm, '5m avg')", "Load / Uptime -> C/N - Load Averages / Uptime -> 5m avg"),
    ("alias($Cloud.$Node.load.load.longterm, '15m avg')", "Load / Uptime -> C/N - Load Averages / Uptime -> 15m avg"),
    ("alias($Cloud.$Node.uptime.uptime, 'uptime')", "Load / Uptime -> C/N - Load Averages / Uptime -> uptime"),
    ("alias($Cloud.$Node.processes.ps_state-running, 'Running')", "Processes -> C/N - Processes State -> Running"),
    ("alias($Cloud.$Node.processes.ps_state-stopped, 'Stopped')", "Processes -> C/N - Processes State -> Stopped"),
    ("alias($Cloud.$Node.processes.ps_state-sleeping, 'Sleeping')", "Processes -> C/N - Processes State -> Sleeping"),
    ("alias($Cloud.$Node.processes.ps_state-blocked, 'Blocked')", "Processes -> C/N - Processes State -> Blocked"),
    ("alias($Cloud.$Node.processes.ps_state-paging, 'Paging')", "Processes -> C/N - Processes State -> Paging"),
    ("alias($Cloud.$Node.processes.ps_state-zombies, 'Zombies')", "Processes -> C/N - Processes State -> Zombies"),
    ("alias($Cloud.$Node.processes.fork_rate, 'Fork Rate')", "Processes -> C/N - Fork Rate -> Fork Rate"),
    ("alias($Cloud.$Node.processes-httpd.ps_count.processes, 'httpd Processes')", "Satellite6 Process/Thread Counts -> Summerized -> httpd Processes"),
    ("alias($Cloud.$Node.processes-httpd.ps_count.threads, 'httpd Threads')", "Satellite6 Process/Thread Counts -> Summerized -> httpd Threads"),
    ("alias($Cloud.$Node.processes-ruby.ps_count.processes, 'ruby Processes')", "Satellite6 Process/Thread Counts -> Summerized -> ruby Processes"),
    ("alias($Cloud.$Node.processes-ruby.ps_count.threads, 'ruby Threads')", "Satellite6 Process/Thread Counts -> Summerized -> ruby Threads"),
    ("alias($Cloud.$Node.processes-dynflow_executor.ps_count.processes, 'dynflow_executor Processes')", "Satellite6 Process/Thread Counts -> DynFlow -> dynflow_executor Processes"),
    ("alias($Cloud.$Node.processes-dynflow_executor.ps_count.threads, 'dynflow_executor Threads')", "Satellite6 Process/Thread Counts -> DynFlow -> dynflow_executor Threads"),
    ("alias($Cloud.$Node.processes-dynflow_executor_monitor.ps_count.processes, 'dynflow_executor_monitor Processes')", "Satellite6 Process/Thread Counts -> DynFlow -> dynflow_executor_monitor Processes"),
    ("alias($Cloud.$Node.processes-dynflow_executor_monitor.ps_count.threads, 'dynflow_executor_monitor Threads')", "Satellite6 Process/Thread Counts -> DynFlow -> dynflow_executor_monitor Threads"),
    ("alias($Cloud.$Node.processes-Foreman-SmartProxy.ps_count.processes, 'Foreman-SmartProxy Processes')", "Satellite6 Process/Thread Counts -> Foreman-SmartProxy -> Foreman-SmartProxy Processes"),
    ("alias($Cloud.$Node.processes-Foreman-SmartProxy.ps_count.threads, 'Foreman-SmartProxy Threads')", "Satellite6 Process/Thread Counts -> Foreman-SmartProxy -> Foreman-SmartProxy Threads"),
    ("alias($Cloud.$Node.processes-mongod.ps_count.processes, 'mongod Processes')", "Satellite6 Process/Thread Counts -> Mongodb -> mongod Processes"),
    ("alias($Cloud.$Node.processes-mongod.ps_count.threads, 'mongod Threads')", "Satellite6 Process/Thread Counts -> Mongodb -> mongod Threads"),
    ("alias($Cloud.$Node.processes-Passenger-Forman.ps_count.processes, 'Passenger-Forman Processes')", "Satellite6 Process/Thread Counts -> Passenger -> Passenger-Forman Processes"),
    ("alias($Cloud.$Node.processes-Passenger-Forman.ps_count.threads, 'Passenger-Forman Threads')", "Satellite6 Process/Thread Counts -> Passenger -> Passenger-Forman Threads"),
    ("alias($Cloud.$Node.processes-Passenger-Puppet.ps_count.processes, 'Passenger-Puppet Processes')", "Satellite6 Process/Thread Counts -> Passenger -> Passenger-Puppet Processes"),
    ("alias($Cloud.$Node.processes-Passenger-Puppet.ps_count.threads, 'Passenger-Puppet Threads')", "Satellite6 Process/Thread Counts -> Passenger -> Passenger-Puppet Threads"),
    ("alias($Cloud.$Node.processes-PassengerHelperAgent.ps_count.processes, 'PassengerHelperAgent Processes')", "Satellite6 Process/Thread Counts -> Passenger -> PassengerHelperAgent Processes"),
    ("alias($Cloud.$Node.processes-PassengerHelperAgent.ps_count.threads, 'PassengerHelperAgent Threads')", "Satellite6 Process/Thread Counts -> Passenger -> PassengerHelperAgent Threads"),
    ("alias($Cloud.$Node.processes-PassengerLoggingAgent.ps_count.processes, 'PassengerLoggingAgent Processes')", "Satellite6 Process/Thread Counts -> Passenger -> PassengerLoggingAgent Processes"),
    ("alias($Cloud.$Node.processes-PassengerLoggingAgent.ps_count.threads, 'PassengerLoggingAgent Threads')", "Satellite6 Process/Thread Counts -> Passenger -> PassengerLoggingAgent Threads"),
    ("alias($Cloud.$Node.processes-PassengerWatchdog.ps_count.processes, 'PassengerWatchdog Processes')", "Satellite6 Process/Thread Counts -> Passenger -> PassengerWatchdog Processes"),
    ("alias($Cloud.$Node.processes-PassengerWatchdog.ps_count.threads, 'PassengerWatchdog Threads')", "Satellite6 Process/Thread Counts -> Passenger -> PassengerWatchdog Threads"),
    ("alias($Cloud.$Node.processes-postgres.ps_count.processes, 'postgres Processes')", "Satellite6 Process/Thread Counts -> Postgres -> postgres Processes"),
    ("alias($Cloud.$Node.processes-postgres.ps_count.threads, 'postgres Threads')", "Satellite6 Process/Thread Counts -> Postgres -> postgres Threads"),
    ("alias($Cloud.$Node.processes-Pulp-Scheduler.ps_count.processes, 'Pulp-Scheduler Processes')", "Satellite6 Process/Thread Counts -> Pulp -> Pulp-Scheduler Processes"),
    ("alias($Cloud.$Node.processes-Pulp-Scheduler.ps_count.threads, 'Pulp-Scheduler Threads')", "Satellite6 Process/Thread Counts -> Pulp -> Pulp-Scheduler Threads"),
    ("alias($Cloud.$Node.processes-Pulp-Resource-Manager.ps_count.processes, 'Pulp-Resource-Manager Processes')", "Satellite6 Process/Thread Counts -> Pulp -> Pulp-Resource-Manager Processes"),
    ("alias($Cloud.$Node.processes-Pulp-Resource-Manager.ps_count.threads, 'Pulp-Resource-Manager Threads')", "Satellite6 Process/Thread Counts -> Pulp -> Pulp-Resource-Manager Threads"),
    ("alias($Cloud.$Node.processes-Pulp-Resource-Worker.ps_count.processes, 'Pulp-Resource-Worker Processes')", "Satellite6 Process/Thread Counts -> Pulp -> Pulp-Resource-Worker Processes"),
    ("alias($Cloud.$Node.processes-Pulp-Resource-Worker.ps_count.threads, 'Pulp-Resource-Worker Threads')", "Satellite6 Process/Thread Counts -> Pulp -> Pulp-Resource-Worker Threads"),
    ("alias($Cloud.$Node.processes-Puppet-Agent.ps_count.processes, 'Puppet-Agent Processes')", "Satellite6 Process/Thread Counts -> Puppet-Agent -> Puppet-Agent Processes"),
    ("alias($Cloud.$Node.processes-Puppet-Agent.ps_count.threads, 'Puppet-Agent Threads')", "Satellite6 Process/Thread Counts -> Puppet-Agent -> Puppet-Agent Threads"),
    ("alias($Cloud.$Node.processes-qdrouterd.ps_count.processes, 'qdrouterd Processes')", "Satellite6 Process/Thread Counts -> Qpidd Dispatch Router -> qdrouterd Processes"),
    ("alias($Cloud.$Node.processes-qdrouterd.ps_count.threads, 'qdrouterd Threads')", "Satellite6 Process/Thread Counts -> Qpidd Dispatch Router -> qdrouterd Threads"),
    ("alias($Cloud.$Node.processes-qpidd.ps_count.processes, 'qpidd Processes')", "Satellite6 Process/Thread Counts -> Qpidd -> qpidd Processes"),
    ("alias($Cloud.$Node.processes-qpidd.ps_count.threads, 'qpidd Threads')", "Satellite6 Process/Thread Counts -> Qpidd -> qpidd Threads"),
    ("alias($Cloud.$Node.processes-Tomcat.ps_count.processes, 'Tomcat Processes')", "Satellite6 Process/Thread Counts -> Tomcat -> Tomcat Processes"),
    ("alias($Cloud.$Node.processes-Tomcat.ps_count.threads, 'Tomcat Threads')", "Satellite6 Process/Thread Counts -> Tomcat -> Tomcat Threads"),
    ("alias($Cloud.$Node.processes-Trends_Counter.ps_count.processes, 'Trends:Counter Processes')", "Satellite6 Process/Thread Counts -> Background Tasks -> Trends:Counter Processes"),
    ("alias($Cloud.$Node.processes-Trends_Counter.ps_count.threads, 'Trends:Counter Threads')", "Satellite6 Process/Thread Counts -> Background Tasks -> Trends:Counter Threads"),
    ("alias($Cloud.$Node.processes-LDAP_Refresh_usergroups.ps_count.processes, 'LDAP:Refresh_usergroups Processes')", "Satellite6 Process/Thread Counts -> Background Tasks -> LDAP:Refresh_usergroups Processes"),
    ("alias($Cloud.$Node.processes-LDAP_Refresh_usergroups.ps_count.threads, 'LDAP:Refresh_usergroups Threads')", "Satellite6 Process/Thread Counts -> Background Tasks -> LDAP:Refresh_usergroups Threads"),
    ("alias($Cloud.$Node.processes-collectd.ps_count.processes, 'collectd Processes')", "Satellite6 Process/Thread Counts -> Collectd -> collectd Processes"),
    ("alias($Cloud.$Node.processes-collectd.ps_count.threads, 'collectd Threads')", "Satellite6 Process/Thread Counts -> Collectd -> collectd Threads"),
    ("$Cloud.$Node.processes-squid.ps_cputime.syst", "Satellite6 Process CPU -> Squid -> $Cloud.$Node.processes-squid.ps_cputime.syst"),
    ("$Cloud.$Node.processes-squid.ps_cputime.user", "Satellite6 Process CPU -> Squid -> $Cloud.$Node.processes-squid.ps_cputime.user"),
    ("alias($Cloud.$Node.processes-httpd.ps_rss, 'httpd RSS')", "Satellite6 Process Memory -> Summerized -> httpd RSS"),
    ("alias($Cloud.$Node.processes-httpd.ps_vm, 'httpd Virtual')", "Satellite6 Process Memory -> Summerized -> httpd Virtual"),
    ("alias($Cloud.$Node.processes-ruby.ps_rss, 'ruby RSS')", "Satellite6 Process Memory -> Summerized -> ruby RSS"),
    ("alias($Cloud.$Node.processes-ruby.ps_vm, 'ruby Virtual')", "Satellite6 Process Memory -> Summerized -> ruby Virtual"),
    ("alias($Cloud.$Node.processes-dynflow_executor.ps_rss, 'dynflow_executor RSS')", "Satellite6 Process Memory -> DynFlow -> dynflow_executor RSS"),
    ("alias($Cloud.$Node.processes-dynflow_executor.ps_vm, 'dynflow_executor Virtual')", "Satellite6 Process Memory -> DynFlow -> dynflow_executor Virtual"),
    ("alias($Cloud.$Node.processes-dynflow_executor_monitor.ps_rss, 'dynflow_executor_monitor RSS')", "Satellite6 Process Memory -> DynFlow -> dynflow_executor_monitor RSS"),
    ("alias($Cloud.$Node.processes-dynflow_executor_monitor.ps_vm, 'dynflow_executor_monitor Virtual')", "Satellite6 Process Memory -> DynFlow -> dynflow_executor_monitor Virtual"),
    ("alias($Cloud.$Node.processes-Foreman-SmartProxy.ps_rss, 'Foreman-SmartProxy RSS')", "Satellite6 Process Memory -> Foreman-SmartProxy -> Foreman-SmartProxy RSS"),
    ("alias($Cloud.$Node.processes-Foreman-SmartProxy.ps_vm, 'Foreman-SmartProxy Virtual')", "Satellite6 Process Memory -> Foreman-SmartProxy -> Foreman-SmartProxy Virtual"),
    ("alias($Cloud.$Node.processes-mongod.ps_rss, 'mongod RSS')", "Satellite6 Process Memory -> Mongodb -> mongod RSS"),
    ("alias($Cloud.$Node.processes-mongod.ps_vm, 'mongod Virtual')", "Satellite6 Process Memory -> Mongodb -> mongod Virtual"),
    ("alias($Cloud.$Node.processes-Passenger-Forman.ps_rss, 'Passenger-Forman RSS')", "Satellite6 Process Memory -> Passenger -> Passenger-Forman RSS"),
    ("alias($Cloud.$Node.processes-Passenger-Forman.ps_vm, 'Passenger-Forman Virtual')", "Satellite6 Process Memory -> Passenger -> Passenger-Forman Virtual"),
    ("alias($Cloud.$Node.processes-Passenger-Puppet.ps_rss, 'Passenger-Puppet RSS')", "Satellite6 Process Memory -> Passenger -> Passenger-Puppet RSS"),
    ("alias($Cloud.$Node.processes-Passenger-Puppet.ps_vm, 'Passenger-Puppet Virtual')", "Satellite6 Process Memory -> Passenger -> Passenger-Puppet Virtual"),
    ("alias($Cloud.$Node.processes-PassengerHelperAgent.ps_rss, 'PassengerHelperAgent RSS')", "Satellite6 Process Memory -> Passenger -> PassengerHelperAgent RSS"),
    ("alias($Cloud.$Node.processes-PassengerHelperAgent.ps_vm, 'PassengerHelperAgent Virtual')", "Satellite6 Process Memory -> Passenger -> PassengerHelperAgent Virtual"),
    ("alias($Cloud.$Node.processes-PassengerLoggingAgent.ps_rss, 'PassengerLoggingAgent RSS')", "Satellite6 Process Memory -> Passenger -> PassengerLoggingAgent RSS"),
    ("alias($Cloud.$Node.processes-PassengerLoggingAgent.ps_vm, 'PassengerLoggingAgent Virtual')", "Satellite6 Process Memory -> Passenger -> PassengerLoggingAgent Virtual"),
    ("alias($Cloud.$Node.processes-PassengerWatchdog.ps_rss, 'PassengerWatchdog RSS')", "Satellite6 Process Memory -> Passenger -> PassengerWatchdog RSS"),
    ("alias($Cloud.$Node.processes-PassengerWatchdog.ps_vm, 'PassengerWatchdog Virtual')", "Satellite6 Process Memory -> Passenger -> PassengerWatchdog Virtual"),
    ("alias($Cloud.$Node.processes-postgres.ps_rss, 'postgres RSS')", "Satellite6 Process Memory -> Postgres -> postgres RSS"),
    ("alias($Cloud.$Node.processes-postgres.ps_vm, 'postgres Virtual')", "Satellite6 Process Memory -> Postgres -> postgres Virtual"),
    ("alias($Cloud.$Node.processes-Pulp-Scheduler.ps_rss, 'Pulp-Scheduler RSS')", "Satellite6 Process Memory -> Pulp -> Pulp-Scheduler RSS"),
    ("alias($Cloud.$Node.processes-Pulp-Scheduler.ps_vm, 'Pulp-Scheduler Virtual')", "Satellite6 Process Memory -> Pulp -> Pulp-Scheduler Virtual"),
    ("alias($Cloud.$Node.processes-Pulp-Resource-Manager.ps_rss, 'Pulp-Resource-Manager RSS')", "Satellite6 Process Memory -> Pulp -> Pulp-Resource-Manager RSS"),
    ("alias($Cloud.$Node.processes-Pulp-Resource-Manager.ps_vm, 'Pulp-Resource-Manager Virtual')", "Satellite6 Process Memory -> Pulp -> Pulp-Resource-Manager Virtual"),
    ("alias($Cloud.$Node.processes-Pulp-Resource-Worker.ps_rss, 'Pulp-Resource-Worker RSS')", "Satellite6 Process Memory -> Pulp -> Pulp-Resource-Worker RSS"),
    ("alias($Cloud.$Node.processes-Pulp-Resource-Worker.ps_vm, 'Pulp-Resource-Worker Virtual')", "Satellite6 Process Memory -> Pulp -> Pulp-Resource-Worker Virtual"),
    ("alias($Cloud.$Node.processes-Puppet-Agent.ps_rss, 'Puppet-Agent RSS')", "Satellite6 Process Memory -> Puppet-Agent -> Puppet-Agent RSS"),
    ("alias($Cloud.$Node.processes-Puppet-Agent.ps_vm, 'Puppet-Agent Virtual')", "Satellite6 Process Memory -> Puppet-Agent -> Puppet-Agent Virtual"),
    ("alias($Cloud.$Node.processes-qdrouterd.ps_rss, 'qdrouterd RSS')", "Satellite6 Process Memory -> Qpidd Dispatch Router -> qdrouterd RSS"),
    ("alias($Cloud.$Node.processes-qdrouterd.ps_vm, 'qdrouterd Virtual')", "Satellite6 Process Memory -> Qpidd Dispatch Router -> qdrouterd Virtual"),
    ("alias($Cloud.$Node.processes-qpidd.ps_rss, 'qpidd RSS')", "Satellite6 Process Memory -> Qpidd -> qpidd RSS"),
    ("alias($Cloud.$Node.processes-qpidd.ps_vm, 'qpidd Virtual')", "Satellite6 Process Memory -> Qpidd -> qpidd Virtual"),
    ("alias($Cloud.$Node.processes-Tomcat.ps_rss, 'Tomcat RSS')", "Satellite6 Process Memory -> Tomcat -> Tomcat RSS"),
    ("alias($Cloud.$Node.processes-Tomcat.ps_vm, 'Tomcat Virtual')", "Satellite6 Process Memory -> Tomcat -> Tomcat Virtual"),
    ("alias($Cloud.$Node.processes-Trends_Counter.ps_rss, 'Trends:Counter RSS')", "Satellite6 Process Memory -> Background Tasks -> Trends:Counter RSS"),
    ("alias($Cloud.$Node.processes-Trends_Counter.ps_vm, 'Trends:Counter Virtual')", "Satellite6 Process Memory -> Background Tasks -> Trends:Counter Virtual"),
    ("alias($Cloud.$Node.processes-LDAP_Refresh_usergroups.ps_rss, 'LDAP:Refresh_usergroups RSS')", "Satellite6 Process Memory -> Background Tasks -> LDAP:Refresh_usergroups RSS"),
    ("alias($Cloud.$Node.processes-LDAP_Refresh_usergroups.ps_vm, 'LDAP:Refresh_usergroups Virtual')", "Satellite6 Process Memory -> Background Tasks -> LDAP:Refresh_usergroups Virtual"),
    ("alias($Cloud.$Node.processes-collectd.ps_rss, 'collectd RSS')", "Satellite6 Process Memory -> Collectd -> collectd RSS"),
    ("alias($Cloud.$Node.processes-collectd.ps_vm, 'collectd Virtual')", "Satellite6 Process Memory -> Collectd -> collectd Virtual"),
    ("$Cloud.$Node.processes-squid.ps_rss", "Satellite6 Process Memory -> Squid Memory -> $Cloud.$Node.processes-squid.ps_rss"),
    ("$Cloud.$Node.processes-squid.ps_vm", "Satellite6 Process Memory -> Squid Memory -> $Cloud.$Node.processes-squid.ps_vm"),
    ("alias($Cloud.$Node.processes-httpd.ps_pagefaults.majflt, 'httpd Majflt')", "Satellite6 Process Page Faults -> Summerized -> httpd Majflt"),
    ("alias($Cloud.$Node.processes-httpd.ps_pagefaults.minflt, 'httpd Minflt')", "Satellite6 Process Page Faults -> Summerized -> httpd Minflt"),
    ("alias($Cloud.$Node.processes-ruby.ps_pagefaults.majflt, 'ruby Majflt')", "Satellite6 Process Page Faults -> Summerized -> ruby Majflt"),
    ("alias($Cloud.$Node.processes-ruby.ps_pagefaults.minflt, 'ruby Minflt')", "Satellite6 Process Page Faults -> Summerized -> ruby Minflt"),
    ("alias($Cloud.$Node.processes-dynflow_executor.ps_pagefaults.majflt, 'dynflow_executor Majflt')", "Satellite6 Process Page Faults -> DynFlow -> dynflow_executor Majflt"),
    ("alias($Cloud.$Node.processes-dynflow_executor.ps_pagefaults.minflt, 'dynflow_executor Minflt')", "Satellite6 Process Page Faults -> DynFlow -> dynflow_executor Minflt"),
    ("alias($Cloud.$Node.processes-dynflow_executor_monitor.ps_pagefaults.majflt, 'dynflow_executor_monitor Majflt')", "Satellite6 Process Page Faults -> DynFlow -> dynflow_executor_monitor Majflt"),
    ("alias($Cloud.$Node.processes-dynflow_executor_monitor.ps_pagefaults.minflt, 'dynflow_executor_monitor Minflt')", "Satellite6 Process Page Faults -> DynFlow -> dynflow_executor_monitor Minflt"),
    ("alias($Cloud.$Node.processes-Foreman-SmartProxy.ps_pagefaults.majflt, 'Foreman-SmartProxy Majflt')", "Satellite6 Process Page Faults -> Foreman-SmartProxy -> Foreman-SmartProxy Majflt"),
    ("alias($Cloud.$Node.processes-Foreman-SmartProxy.ps_pagefaults.minflt, 'Foreman-SmartProxy Minflt')", "Satellite6 Process Page Faults -> Foreman-SmartProxy -> Foreman-SmartProxy Minflt"),
    ("alias($Cloud.$Node.processes-mongod.ps_pagefaults.majflt, 'mongod Majflt')", "Satellite6 Process Page Faults -> Mongodb -> mongod Majflt"),
    ("alias($Cloud.$Node.processes-mongod.ps_pagefaults.minflt, 'mongod Minflt')", "Satellite6 Process Page Faults -> Mongodb -> mongod Minflt"),
    ("alias($Cloud.$Node.processes-Passenger-Forman.ps_pagefaults.majflt, 'Passenger-Forman Majflt')", "Satellite6 Process Page Faults -> Passenger -> Passenger-Forman Majflt"),
    ("alias($Cloud.$Node.processes-Passenger-Forman.ps_pagefaults.minflt, 'Passenger-Forman Minflt')", "Satellite6 Process Page Faults -> Passenger -> Passenger-Forman Minflt"),
    ("alias($Cloud.$Node.processes-Passenger-Puppet.ps_pagefaults.majflt, 'Passenger-Puppet Majflt')", "Satellite6 Process Page Faults -> Passenger -> Passenger-Puppet Majflt"),
    ("alias($Cloud.$Node.processes-Passenger-Puppet.ps_pagefaults.minflt, 'Passenger-Puppet Minflt')", "Satellite6 Process Page Faults -> Passenger -> Passenger-Puppet Minflt"),
    ("alias($Cloud.$Node.processes-PassengerHelperAgent.ps_pagefaults.majflt, 'PassengerHelperAgent Majflt')", "Satellite6 Process Page Faults -> Passenger -> PassengerHelperAgent Majflt"),
    ("alias($Cloud.$Node.processes-PassengerHelperAgent.ps_pagefaults.minflt, 'PassengerHelperAgent Minflt')", "Satellite6 Process Page Faults -> Passenger -> PassengerHelperAgent Minflt"),
    ("alias($Cloud.$Node.processes-PassengerLoggingAgent.ps_pagefaults.majflt, 'PassengerLoggingAgent Majflt')", "Satellite6 Process Page Faults -> Passenger -> PassengerLoggingAgent Majflt"),
    ("alias($Cloud.$Node.processes-PassengerLoggingAgent.ps_pagefaults.minflt, 'PassengerLoggingAgent Minflt')", "Satellite6 Process Page Faults -> Passenger -> PassengerLoggingAgent Minflt"),
    ("alias($Cloud.$Node.processes-PassengerWatchdog.ps_pagefaults.majflt, 'PassengerWatchdog Majflt')", "Satellite6 Process Page Faults -> Passenger -> PassengerWatchdog Majflt"),
    ("alias($Cloud.$Node.processes-PassengerWatchdog.ps_pagefaults.minflt, 'PassengerWatchdog Minflt')", "Satellite6 Process Page Faults -> Passenger -> PassengerWatchdog Minflt"),
    ("alias($Cloud.$Node.processes-postgres.ps_pagefaults.majflt, 'postgres Majflt')", "Satellite6 Process Page Faults -> Postgres -> postgres Majflt"),
    ("alias($Cloud.$Node.processes-postgres.ps_pagefaults.minflt, 'postgres Minflt')", "Satellite6 Process Page Faults -> Postgres -> postgres Minflt"),
    ("alias($Cloud.$Node.processes-Pulp-Scheduler.ps_pagefaults.majflt, 'Pulp-Scheduler Majflt')", "Satellite6 Process Page Faults -> Pulp -> Pulp-Scheduler Majflt"),
    ("alias($Cloud.$Node.processes-Pulp-Scheduler.ps_pagefaults.minflt, 'Pulp-Scheduler Minflt')", "Satellite6 Process Page Faults -> Pulp -> Pulp-Scheduler Minflt"),
    ("alias($Cloud.$Node.processes-Pulp-Resource-Manager.ps_pagefaults.majflt, 'Pulp-Resource-Manager Majflt')", "Satellite6 Process Page Faults -> Pulp -> Pulp-Resource-Manager Majflt"),
    ("alias($Cloud.$Node.processes-Pulp-Resource-Manager.ps_pagefaults.minflt, 'Pulp-Resource-Manager Minflt')", "Satellite6 Process Page Faults -> Pulp -> Pulp-Resource-Manager Minflt"),
    ("alias($Cloud.$Node.processes-Pulp-Resource-Worker.ps_pagefaults.majflt, 'Pulp-Resource-Worker Majflt')", "Satellite6 Process Page Faults -> Pulp -> Pulp-Resource-Worker Majflt"),
    ("alias($Cloud.$Node.processes-Pulp-Resource-Worker.ps_pagefaults.minflt, 'Pulp-Resource-Worker Minflt')", "Satellite6 Process Page Faults -> Pulp -> Pulp-Resource-Worker Minflt"),
    ("alias($Cloud.$Node.processes-Puppet-Agent.ps_pagefaults.majflt, 'Puppet-Agent Majflt')", "Satellite6 Process Page Faults -> Puppet-Agent -> Puppet-Agent Majflt"),
    ("alias($Cloud.$Node.processes-Puppet-Agent.ps_pagefaults.minflt, 'Puppet-Agent Minflt')", "Satellite6 Process Page Faults -> Puppet-Agent -> Puppet-Agent Minflt"),
    ("alias($Cloud.$Node.processes-qdrouterd.ps_pagefaults.majflt, 'qdrouterd Majflt')", "Satellite6 Process Page Faults -> Qpidd Dispatch Router -> qdrouterd Majflt"),
    ("alias($Cloud.$Node.processes-qdrouterd.ps_pagefaults.minflt, 'qdrouterd Minflt')", "Satellite6 Process Page Faults -> Qpidd Dispatch Router -> qdrouterd Minflt"),
    ("alias($Cloud.$Node.processes-qpidd.ps_pagefaults.majflt, 'qpidd Majflt')", "Satellite6 Process Page Faults -> Qpidd -> qpidd Majflt"),
    ("alias($Cloud.$Node.processes-qpidd.ps_pagefaults.minflt, 'qpidd Minflt')", "Satellite6 Process Page Faults -> Qpidd -> qpidd Minflt"),
    ("alias($Cloud.$Node.processes-Tomcat.ps_pagefaults.majflt, 'Tomcat Majflt')", "Satellite6 Process Page Faults -> Tomcat -> Tomcat Majflt"),
    ("alias($Cloud.$Node.processes-Tomcat.ps_pagefaults.minflt, 'Tomcat Minflt')", "Satellite6 Process Page Faults -> Tomcat -> Tomcat Minflt"),
    ("alias($Cloud.$Node.processes-Trends_Counter.ps_pagefaults.majflt, 'Trends:Counter Majflt')", "Satellite6 Process Page Faults -> Background Tasks -> Trends:Counter Majflt"),
    ("alias($Cloud.$Node.processes-Trends_Counter.ps_pagefaults.minflt, 'Trends:Counter Minflt')", "Satellite6 Process Page Faults -> Background Tasks -> Trends:Counter Minflt"),
    ("alias($Cloud.$Node.processes-LDAP_Refresh_usergroups.ps_pagefaults.majflt, 'LDAP:Refresh_usergroups Majflt')", "Satellite6 Process Page Faults -> Background Tasks -> LDAP:Refresh_usergroups Majflt"),
    ("alias($Cloud.$Node.processes-LDAP_Refresh_usergroups.ps_pagefaults.minflt, 'LDAP:Refresh_usergroups Minflt')", "Satellite6 Process Page Faults -> Background Tasks -> LDAP:Refresh_usergroups Minflt"),
    ("alias($Cloud.$Node.processes-collectd.ps_pagefaults.majflt, 'collectd Majflt')", "Satellite6 Process Page Faults -> Collectd -> collectd Majflt"),
    ("alias($Cloud.$Node.processes-collectd.ps_pagefaults.minflt, 'collectd Minflt')", "Satellite6 Process Page Faults -> Collectd -> collectd Minflt"),
    ("alias($Cloud.$Node.processes-httpd.ps_disk_ops.read, 'httpd Read')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Summerized -> httpd Read"),
    ("alias($Cloud.$Node.processes-httpd.ps_disk_ops.write, 'httpd Write')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Summerized -> httpd Write"),
    ("alias($Cloud.$Node.processes-ruby.ps_disk_ops.read, 'ruby Read')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Summerized -> ruby Read"),
    ("alias($Cloud.$Node.processes-ruby.ps_disk_ops.write, 'ruby Write')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Summerized -> ruby Write"),
    ("alias($Cloud.$Node.processes-dynflow_executor.ps_disk_ops.read, 'dynflow_executor Read')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> DynFlow -> dynflow_executor Read"),
    ("alias($Cloud.$Node.processes-dynflow_executor.ps_disk_ops.write, 'dynflow_executor Write')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> DynFlow -> dynflow_executor Write"),
    ("alias($Cloud.$Node.processes-dynflow_executor_monitor.ps_disk_ops.read, 'dynflow_executor_monitor Read')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> DynFlow -> dynflow_executor_monitor Read"),
    ("alias($Cloud.$Node.processes-dynflow_executor_monitor.ps_disk_ops.write, 'dynflow_executor_monitor Write')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> DynFlow -> dynflow_executor_monitor Write"),
    ("alias($Cloud.$Node.processes-Foreman-SmartProxy.ps_disk_ops.read, 'Foreman-SmartProxy Read')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Foreman-SmartProxy -> Foreman-SmartProxy Read"),
    ("alias($Cloud.$Node.processes-Foreman-SmartProxy.ps_disk_ops.write, 'Foreman-SmartProxy Write')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Foreman-SmartProxy -> Foreman-SmartProxy Write"),
    ("alias($Cloud.$Node.processes-mongod.ps_disk_ops.read, 'mongod Read')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Mongodb -> mongod Read"),
    ("alias($Cloud.$Node.processes-mongod.ps_disk_ops.write, 'mongod Write')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Mongodb -> mongod Write"),
    ("alias($Cloud.$Node.processes-Passenger-Forman.ps_disk_ops.read, 'Passenger-Forman Read')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Passenger -> Passenger-Forman Read"),
    ("alias($Cloud.$Node.processes-Passenger-Forman.ps_disk_ops.write, 'Passenger-Forman Write')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Passenger -> Passenger-Forman Write"),
    ("alias($Cloud.$Node.processes-Passenger-Puppet.ps_disk_ops.read, 'Passenger-Puppet Read')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Passenger -> Passenger-Puppet Read"),
    ("alias($Cloud.$Node.processes-Passenger-Puppet.ps_disk_ops.write, 'Passenger-Puppet Write')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Passenger -> Passenger-Puppet Write"),
    ("alias($Cloud.$Node.processes-PassengerHelperAgent.ps_disk_ops.read, 'PassengerHelperAgent Read')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Passenger -> PassengerHelperAgent Read"),
    ("alias($Cloud.$Node.processes-PassengerHelperAgent.ps_disk_ops.write, 'PassengerHelperAgent Write')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Passenger -> PassengerHelperAgent Write"),
    ("alias($Cloud.$Node.processes-PassengerLoggingAgent.ps_disk_ops.read, 'PassengerLoggingAgent Read')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Passenger -> PassengerLoggingAgent Read"),
    ("alias($Cloud.$Node.processes-PassengerLoggingAgent.ps_disk_ops.write, 'PassengerLoggingAgent Write')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Passenger -> PassengerLoggingAgent Write"),
    ("alias($Cloud.$Node.processes-PassengerWatchdog.ps_disk_ops.read, 'PassengerWatchdog Read')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Passenger -> PassengerWatchdog Read"),
    ("alias($Cloud.$Node.processes-PassengerWatchdog.ps_disk_ops.write, 'PassengerWatchdog Write')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Passenger -> PassengerWatchdog Write"),
    ("alias($Cloud.$Node.processes-postgres.ps_disk_ops.read, 'postgres Read')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Postgres -> postgres Read"),
    ("alias($Cloud.$Node.processes-postgres.ps_disk_ops.write, 'postgres Write')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Postgres -> postgres Write"),
    ("alias($Cloud.$Node.processes-Pulp-Scheduler.ps_disk_ops.read, 'Pulp-Scheduler Read')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Pulp -> Pulp-Scheduler Read"),
    ("alias($Cloud.$Node.processes-Pulp-Scheduler.ps_disk_ops.write, 'Pulp-Scheduler Write')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Pulp -> Pulp-Scheduler Write"),
    ("alias($Cloud.$Node.processes-Pulp-Resource-Manager.ps_disk_ops.read, 'Pulp-Resource-Manager Read')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Pulp -> Pulp-Resource-Manager Read"),
    ("alias($Cloud.$Node.processes-Pulp-Resource-Manager.ps_disk_ops.write, 'Pulp-Resource-Manager Write')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Pulp -> Pulp-Resource-Manager Write"),
    ("alias($Cloud.$Node.processes-Pulp-Resource-Worker.ps_disk_ops.read, 'Pulp-Resource-Worker Read')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Pulp -> Pulp-Resource-Worker Read"),
    ("alias($Cloud.$Node.processes-Pulp-Resource-Worker.ps_disk_ops.write, 'Pulp-Resource-Worker Write')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Pulp -> Pulp-Resource-Worker Write"),
    ("alias($Cloud.$Node.processes-Puppet-Agent.ps_disk_ops.read, 'Puppet-Agent Read')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Puppet-Agent -> Puppet-Agent Read"),
    ("alias($Cloud.$Node.processes-Puppet-Agent.ps_disk_ops.write, 'Puppet-Agent Write')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Puppet-Agent -> Puppet-Agent Write"),
    ("alias($Cloud.$Node.processes-qdrouterd.ps_disk_ops.read, 'qdrouterd Read')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Qpidd Dispatch Router -> qdrouterd Read"),
    ("alias($Cloud.$Node.processes-qdrouterd.ps_disk_ops.write, 'qdrouterd Write')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Qpidd Dispatch Router -> qdrouterd Write"),
    ("alias($Cloud.$Node.processes-qpidd.ps_disk_ops.read, 'qpidd Read')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Qpidd -> qpidd Read"),
    ("alias($Cloud.$Node.processes-qpidd.ps_disk_ops.write, 'qpidd Write')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Qpidd -> qpidd Write"),
    ("alias($Cloud.$Node.processes-Tomcat.ps_disk_ops.read, 'Tomcat Read')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Tomcat -> Tomcat Read"),
    ("alias($Cloud.$Node.processes-Tomcat.ps_disk_ops.write, 'Tomcat Write')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Tomcat -> Tomcat Write"),
    ("alias($Cloud.$Node.processes-Trends_Counter.ps_disk_ops.read, 'Trends:Counter Read')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Background Tasks -> Trends:Counter Read"),
    ("alias($Cloud.$Node.processes-Trends_Counter.ps_disk_ops.write, 'Trends:Counter Write')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Background Tasks -> Trends:Counter Write"),
    ("alias($Cloud.$Node.processes-LDAP_Refresh_usergroups.ps_disk_ops.read, 'LDAP:Refresh_usergroups Read')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Background Tasks -> LDAP:Refresh_usergroups Read"),
    ("alias($Cloud.$Node.processes-LDAP_Refresh_usergroups.ps_disk_ops.write, 'LDAP:Refresh_usergroups Write')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Background Tasks -> LDAP:Refresh_usergroups Write"),
    ("alias($Cloud.$Node.processes-collectd.ps_disk_ops.read, 'collectd Read')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Collectd -> collectd Read"),
    ("alias($Cloud.$Node.processes-collectd.ps_disk_ops.write, 'collectd Write')", "Satellite6 Process IOPs(Estimated via SYSCALLS) -> Collectd -> collectd Write"),
    ("alias($Cloud.$Node.processes-httpd.ps_disk_octets.read, 'httpd Read')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Summerized -> httpd Read"),
    ("alias($Cloud.$Node.processes-httpd.ps_disk_octets.write, 'httpd Write')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Summerized -> httpd Write"),
    ("alias($Cloud.$Node.processes-ruby.ps_disk_octets.read, 'ruby Read')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Summerized -> ruby Read"),
    ("alias($Cloud.$Node.processes-ruby.ps_disk_octets.write, 'ruby Write')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Summerized -> ruby Write"),
    ("alias($Cloud.$Node.processes-dynflow_executor.ps_disk_octets.read, 'dynflow_executor Read')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> DynFlow -> dynflow_executor Read"),
    ("alias($Cloud.$Node.processes-dynflow_executor.ps_disk_octets.write, 'dynflow_executor Write')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> DynFlow -> dynflow_executor Write"),
    ("alias($Cloud.$Node.processes-dynflow_executor_monitor.ps_disk_octets.read, 'dynflow_executor_monitor Read')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> DynFlow -> dynflow_executor_monitor Read"),
    ("alias($Cloud.$Node.processes-dynflow_executor_monitor.ps_disk_octets.write, 'dynflow_executor_monitor Write')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> DynFlow -> dynflow_executor_monitor Write"),
    ("alias($Cloud.$Node.processes-Foreman-SmartProxy.ps_disk_octets.read, 'Foreman-SmartProxy Read')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Foreman-SmartProxy -> Foreman-SmartProxy Read"),
    ("alias($Cloud.$Node.processes-Foreman-SmartProxy.ps_disk_octets.write, 'Foreman-SmartProxy Write')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Foreman-SmartProxy -> Foreman-SmartProxy Write"),
    ("alias($Cloud.$Node.processes-mongod.ps_disk_octets.read, 'mongod Read')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Mongodb -> mongod Read"),
    ("alias($Cloud.$Node.processes-mongod.ps_disk_octets.write, 'mongod Write')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Mongodb -> mongod Write"),
    ("alias($Cloud.$Node.processes-Passenger-Forman.ps_disk_octets.read, 'Passenger-Forman Read')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Passenger -> Passenger-Forman Read"),
    ("alias($Cloud.$Node.processes-Passenger-Forman.ps_disk_octets.write, 'Passenger-Forman Write')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Passenger -> Passenger-Forman Write"),
    ("alias($Cloud.$Node.processes-Passenger-Puppet.ps_disk_octets.read, 'Passenger-Puppet Read')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Passenger -> Passenger-Puppet Read"),
    ("alias($Cloud.$Node.processes-Passenger-Puppet.ps_disk_octets.write, 'Passenger-Puppet Write')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Passenger -> Passenger-Puppet Write"),
    ("alias($Cloud.$Node.processes-PassengerHelperAgent.ps_disk_octets.read, 'PassengerHelperAgent Read')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Passenger -> PassengerHelperAgent Read"),
    ("alias($Cloud.$Node.processes-PassengerHelperAgent.ps_disk_octets.write, 'PassengerHelperAgent Write')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Passenger -> PassengerHelperAgent Write"),
    ("alias($Cloud.$Node.processes-PassengerLoggingAgent.ps_disk_octets.read, 'PassengerLoggingAgent Read')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Passenger -> PassengerLoggingAgent Read"),
    ("alias($Cloud.$Node.processes-PassengerLoggingAgent.ps_disk_octets.write, 'PassengerLoggingAgent Write')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Passenger -> PassengerLoggingAgent Write"),
    ("alias($Cloud.$Node.processes-PassengerWatchdog.ps_disk_octets.read, 'PassengerWatchdog Read')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Passenger -> PassengerWatchdog Read"),
    ("alias($Cloud.$Node.processes-PassengerWatchdog.ps_disk_octets.write, 'PassengerWatchdog Write')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Passenger -> PassengerWatchdog Write"),
    ("alias($Cloud.$Node.processes-postgres.ps_disk_octets.read, 'postgres Read')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Postgres -> postgres Read"),
    ("alias($Cloud.$Node.processes-postgres.ps_disk_octets.write, 'postgres Write')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Postgres -> postgres Write"),
    ("alias($Cloud.$Node.processes-Pulp-Scheduler.ps_disk_octets.read, 'Pulp-Scheduler Read')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Pulp -> Pulp-Scheduler Read"),
    ("alias($Cloud.$Node.processes-Pulp-Scheduler.ps_disk_octets.write, 'Pulp-Scheduler Write')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Pulp -> Pulp-Scheduler Write"),
    ("alias($Cloud.$Node.processes-Pulp-Resource-Manager.ps_disk_octets.read, 'Pulp-Resource-Manager Read')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Pulp -> Pulp-Resource-Manager Read"),
    ("alias($Cloud.$Node.processes-Pulp-Resource-Manager.ps_disk_octets.write, 'Pulp-Resource-Manager Write')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Pulp -> Pulp-Resource-Manager Write"),
    ("alias($Cloud.$Node.processes-Pulp-Resource-Worker.ps_disk_octets.read, 'Pulp-Resource-Worker Read')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Pulp -> Pulp-Resource-Worker Read"),
    ("alias($Cloud.$Node.processes-Pulp-Resource-Worker.ps_disk_octets.write, 'Pulp-Resource-Worker Write')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Pulp -> Pulp-Resource-Worker Write"),
    ("alias($Cloud.$Node.processes-Puppet-Agent.ps_disk_octets.read, 'Puppet-Agent Read')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Puppet-Agent -> Puppet-Agent Read"),
    ("alias($Cloud.$Node.processes-Puppet-Agent.ps_disk_octets.write, 'Puppet-Agent Write')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Puppet-Agent -> Puppet-Agent Write"),
    ("alias($Cloud.$Node.processes-qdrouterd.ps_disk_octets.read, 'qdrouterd Read')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Qpidd Dispatch Router -> qdrouterd Read"),
    ("alias($Cloud.$Node.processes-qdrouterd.ps_disk_octets.write, 'qdrouterd Write')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Qpidd Dispatch Router -> qdrouterd Write"),
    ("alias($Cloud.$Node.processes-qpidd.ps_disk_octets.read, 'qpidd Read')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Qpidd -> qpidd Read"),
    ("alias($Cloud.$Node.processes-qpidd.ps_disk_octets.write, 'qpidd Write')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Qpidd -> qpidd Write"),
    ("alias($Cloud.$Node.processes-Tomcat.ps_disk_octets.read, 'Tomcat Read')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Tomcat -> Tomcat Read"),
    ("alias($Cloud.$Node.processes-Tomcat.ps_disk_octets.write, 'Tomcat Write')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Tomcat -> Tomcat Write"),
    ("alias($Cloud.$Node.processes-Trends_Counter.ps_disk_octets.read, 'Trends:Counter Read')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Background Tasks -> Trends:Counter Read"),
    ("alias($Cloud.$Node.processes-Trends_Counter.ps_disk_octets.write, 'Trends:Counter Write')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Background Tasks -> Trends:Counter Write"),
    ("alias($Cloud.$Node.processes-LDAP_Refresh_usergroups.ps_disk_octets.read, 'LDAP:Refresh_usergroups Read')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Background Tasks -> LDAP:Refresh_usergroups Read"),
    ("alias($Cloud.$Node.processes-LDAP_Refresh_usergroups.ps_disk_octets.write, 'LDAP:Refresh_usergroups Write')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Background Tasks -> LDAP:Refresh_usergroups Write"),
    ("alias($Cloud.$Node.processes-collectd.ps_disk_octets.read, 'collectd Read')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Collectd -> collectd Read"),
    ("alias($Cloud.$Node.processes-collectd.ps_disk_octets.write, 'collectd Write')", "Satellite6 Process IO Throughput(Estimated via SYSCALLS) -> Collectd -> collectd Write"),
    ("aliasByNode(aliasSub($Cloud.$Node.postgresql-*.pg_db_size, 'postgresql-', ''), 2)", "Postgresql -> C/N - Database Sizes -> aliasByNode(aliasSub($Cloud.$Node.postgresql-*.pg_db_size, 'postgresql-', ''), 2)"),
    ("aliasByNode(aliasSub($Cloud.$Node.postgresql-*.pg_numbackends, 'postgresql-', ''), 2)", "Postgresql -> C/N - Connected Clients -> aliasByNode(aliasSub($Cloud.$Node.postgresql-*.pg_numbackends, 'postgresql-', ''), 2)"),
    ("aliasByNode(aliasSub($Cloud.$Node.postgresql-foreman.pg_blks-*, 'pg_blks-', ''), 3)", "Postgresql -> C/N - Foreman Heap/Index/Toast Activity -> aliasByNode(aliasSub($Cloud.$Node.postgresql-foreman.pg_blks-*, 'pg_blks-', ''), 3)"),
    ("aliasByNode(aliasSub($Cloud.$Node.postgresql-candlepin.pg_blks-*, 'pg_blks-', ''), 3)", "Postgresql -> C/N - Candlepin Heap/Index/Toast Activity -> aliasByNode(aliasSub($Cloud.$Node.postgresql-candlepin.pg_blks-*, 'pg_blks-', ''), 3)"),
    ("aliasByNode(aliasSub($Cloud.$Node.postgresql-gutterball.pg_blks-*, 'pg_blks-', ''), 3)", "Postgresql -> C/N - Gutterball Heap/Index/Toast Activity -> aliasByNode(aliasSub($Cloud.$Node.postgresql-gutterball.pg_blks-*, 'pg_blks-', ''), 3)"),
    ("aliasByNode(aliasSub($Cloud.$Node.postgresql-foreman.pg_n_tup_*, 'pg_n_tup_', ''), 3)", "Postgresql -> C/N - Foreman Tuple Operations -> aliasByNode(aliasSub($Cloud.$Node.postgresql-foreman.pg_n_tup_*, 'pg_n_tup_', ''), 3)"),
    ("aliasByNode(aliasSub($Cloud.$Node.postgresql-candlepin.pg_n_tup_*, 'pg_n_tup_', ''), 3)", "Postgresql -> C/N - Candlepin Tuple Operations -> aliasByNode(aliasSub($Cloud.$Node.postgresql-candlepin.pg_n_tup_*, 'pg_n_tup_', ''), 3)"),
    ("aliasByNode(aliasSub($Cloud.$Node.postgresql-gutterball.pg_n_tup_*, 'pg_n_tup_', ''), 3)", "Postgresql -> C/N - Gutterball Tuple Operations -> aliasByNode(aliasSub($Cloud.$Node.postgresql-gutterball.pg_n_tup_*, 'pg_n_tup_', ''), 3)"),
    ("aliasSub(aliasByNode(aliasSub($Cloud.$Node.postgresql-*.pg_xact-commit, 'postgresql-', ''), 2), '$', '-commit')", "Postgresql -> C/N - Commits/Rollbacks -> aliasSub(aliasByNode(aliasSub($Cloud.$Node.postgresql-*.pg_xact-commit, 'postgresql-', ''), 2), '$', '-commit')"),
    ("aliasSub(aliasByNode(aliasSub($Cloud.$Node.postgresql-*.pg_xact-rollback, 'postgresql-', ''), 2), '$', '-rollback')", "Postgresql -> C/N - Commits/Rollbacks -> aliasSub(aliasByNode(aliasSub($Cloud.$Node.postgresql-*.pg_xact-rollback, 'postgresql-', ''), 2), '$', '-rollback')"),
    ("aliasByNode($Cloud.$Node.tail-*.counter-total, 2)", "Tail -> C/N - Tail -> aliasByNode($Cloud.$Node.tail-*.counter-total, 2)"),
    ("alias($Cloud.$Node.apache.apache_bytes, 'Bytes')", "Apache -> C/N - Apache Stats -> Bytes"),
    ("alias($Cloud.$Node.apache.apache_connections, 'Connections')", "Apache -> C/N - Apache Stats -> Connections"),
    ("alias($Cloud.$Node.apache.apache_idle_workers, 'Idle Workers')", "Apache -> C/N - Apache Stats -> Idle Workers"),
    ("alias($Cloud.$Node.apache.apache_requests, 'Requests')", "Apache -> C/N - Apache Stats -> Requests"),
    ("aliasByNode(aliasSub($Cloud.$Node.apache.apache_scoreboard-*, 'apache_scoreboard-', ''), 3)", "Apache -> C/N - Apache Scoreboard -> aliasByNode(aliasSub($Cloud.$Node.apache.apache_scoreboard-*, 'apache_scoreboard-', ''), 3)"),
]

targets = [
    ("$Cloud.$Node.load.load.shortterm", "Load / Uptime -> C/N - Load Averages / Uptime -> 1m avg"),
    ("$Cloud.$Node.memory.memory-used", "Memory & Swap -> C/N - Memory in Bytes -> Used"),
    ("$Cloud.$Node.swap.swap-used", "Memory & Swap -> C/N - Swap Usage -> Used"),
    ("sum($Cloud.$Node.*.disk_octets.read)", "Disk -> C/N - $Disk Throughput -> Read"),
    ("sum($Cloud.$Node.*.disk_octets.write)", "Disk -> C/N - $Disk Throughput -> Write"),

    ("$Cloud.$Node.processes-httpd.ps_rss", "Satellite6 Process Memory -> Summerized -> httpd RSS"),
    ("$Cloud.$Node.processes-ruby.ps_rss", "Satellite6 Process Memory -> Summerized -> ruby RSS"),
    ("$Cloud.$Node.processes-dynflow_executor.ps_rss", "Satellite6 Process Memory -> Summerized -> dynflow_executor RSS"),
    ("$Cloud.$Node.processes-postgres.ps_rss", "Satellite6 Process Memory -> Summerized -> postgresql RSS"),
    ("$Cloud.$Node.processes-Tomcat.ps_rss", "Satellite6 Process Memory -> Summerized -> tomcat RSS"),
    ("$Cloud.$Node.processes-qpidd.ps_rss", "Satellite6 Process Memory -> Summerized -> qpidd RSS"),
    ("$Cloud.$Node.processes-qdrouterd.ps_rss", "Satellite6 Process Memory -> Summerized -> qdrouterd RSS"),

    ("scale($Cloud.$Node.processes-httpd.ps_cputime.user, 0.0001)", "Satellite6 Process CPU -> Summerized -> httpd User"),
    ("scale($Cloud.$Node.processes-ruby.ps_cputime.user, 0.0001)", "Satellite6 Process CPU -> Summerized -> ruby User"),
    ("scale($Cloud.$Node.processes-dynflow_executor.ps_cputime.user, 0.0001)", "Satellite6 Process CPU -> Summerized -> dynflow_executor User"),
    ("scale($Cloud.$Node.processes-postgres.ps_cputime.user, 0.0001)", "Satellite6 Process CPU -> Summerized -> ruby User"),
    ("scale($Cloud.$Node.processes-Tomcat.ps_cputime.user, 0.0001)", "Satellite6 Process CPU -> Summerized -> tomcat User"),
    ("scale($Cloud.$Node.processes-qpidd.ps_cputime.user, 0.0001)", "Satellite6 Process CPU -> Summerized -> qpidd User"),
    ("scale($Cloud.$Node.processes-qdrouterd.ps_cputime.user, 0.0001)", "Satellite6 Process CPU -> Summerized -> qdrouterd User"),

    ("$Cloud.$Node.postgresql-candlepin.pg_n_tup_c-del", "PostgreSQL -> Foreman Tuple Operations -> c-del"),
    ("$Cloud.$Node.postgresql-candlepin.pg_n_tup_c-ins", "PostgreSQL -> Foreman Tuple Operations -> c-ins"),
    ("$Cloud.$Node.postgresql-candlepin.pg_n_tup_c-upd", "PostgreSQL -> Foreman Tuple Operations -> c-upd"),
]
logging.debug("Metrics: %s" % targets)

# What is the Graphite server we should talk to
cfg = configparser.ConfigParser()
cfg.read(args.inventory)
graphite = cfg.items('graphite')[0][0].split()[0]
logging.debug("Graphite server: %s" % graphite)

def sanitize_target(target):
    target = target.replace('$Cloud', args.prefix)
    target = target.replace('$Node', 'cloud02-sat-vm1_rdu_openstack_engineering_redhat_com')
    return target

data = []
for i in range(0, len(targets), args.chunk_size):
    targets_chunk = targets[i:i+args.chunk_size]

    # Metadata for the request
    headers = {
        'Accept': 'application/json, text/plain, */*',
    }
    params = {
        'target': ["alias(%s, '%s')" % (sanitize_target(k), v) for k,v in targets_chunk],
        'from': args.from_ts,
        'until': args.to_ts,
        'format': 'json',
    }
    url = "http://%s:%s/api/datasources/proxy/1/render" % (graphite, args.port)

    r = requests.get(url=url, headers=headers, params=params)
    if not r.ok:
        logging.error("URL = %s" % r.url)
        logging.error("headers = %s" % r.headers)
        logging.error("status code = %s" % r.status_code)
        logging.error("text = %s" % r.text)
        raise Exception("Request failed")
    data += r.json()

table_header = ['metric', 'min', 'max', 'mean', 'median', 'integral', 'pstdev', 'pvariance']
table_data = []
file_data = {}
for d in data:
    d_plain = [i[0] for i in d['datapoints'] if i[0] is not None]
    d_timestamps = [i[1] for i in d['datapoints'] if i[0] is not None]
    d_min = min(d_plain)
    d_max = max(d_plain)
    d_mean = statistics.mean(d_plain)
    d_median = statistics.median(d_plain)
    d_integral = scipy.integrate.simps(d_plain, d_timestamps)
    d_pstdev = statistics.pstdev(d_plain)
    d_pvariance = statistics.pvariance(d_plain)
    table_row = [d['target'], d_min, d_max, d_mean, d_median, d_integral, d_pstdev, d_pvariance]
    table_data.append(table_row)
    file_data[d['target']] = {table_header[i]:table_row[i] for i in range(len(table_header))}
print(tabulate.tabulate(table_data, headers=table_header, floatfmt='.2f'))

with open(args.file, 'w') as fp:
    json.dump(file_data, fp, indent=4)
    logging.info("Stats saved into %s" % args.file)
