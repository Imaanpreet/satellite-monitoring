---
#
# Install/run graphite-web for satellite
#

- name: Check for EPEL
  shell: rpm -qa | grep -q epel-release
  ignore_errors: true
  register: epel_installed

- name: Get EPEL repo if not already there
  get_url:
    url: "{{ epel_repo }}"
    dest: /root/epel-release.rpm
  when: epel_installed.rc != 0

- name: Install EPEL rpm if not already done
  shell: rpm -ivh --force /root/epel-release.rpm
  when: epel_installed.rc != 0

- name: Check for enabled epel-release
  shell: yum repolist | grep -q epel
  ignore_errors: true
  register: epel_enabled

- name: "Enable RHEL Optional repo where some of our deps live"
  command:
    subscription-manager repos --enable 'rhel-{{ ansible_distribution_major_version }}-server-optional-rpms'
  when: offline_install is undefined

- name: Install graphite rpms
  yum: name={{ item }} state=present
  become: true
  with_items:
    - graphite-web
    - python-carbon

#TODO: graphite postinstallation settings
# edit /etc/graphite/local_settings.py
# and set ALLOWED_HOSTS = ['*'] or more constrained set if you'd like

- name: Set SECRET_KEY in graphite config
  shell:
    echo "SECRET_KEY = '{{ 999999999|random }}'" >> /etc/graphite-web/local_settings.py

- name: Create initial graphite db
  shell: python /usr/lib/python2.7/site-packages/graphite/manage.py syncdb --noinput && echo "from django.contrib.auth.models import User; User.objects.create_superuser('{{ graphite_username }}', '', '{{ graphite_password }}')" | python /usr/lib/python2.7/site-packages/graphite/manage.py shell && chown apache:apache /var/lib/graphite-web/graphite.db
  args:
    creates: /var/lib/graphite-web/graphite.db
  become: true
  register: apache_needs_restart

- name: Setup httpd graphite-web config
  template:
    src=graphite-web.conf.j2
    dest=/etc/httpd/conf.d/graphite-web.conf
    owner=root
    group=root
    mode=0644
  become: true
  register: apache_needs_restart


# Start graphite-web service

- name: Setup httpd service
  service: name=httpd state=started enabled=true
  become: true

# disable firewalld (might need to create specific firewall rules or leave it to admin to do via iptables)

- name: disable firewalld
  service: name=firewalld state=stopped enabled=false
  become: true
  ignore_errors: true

# remove silly welcome from apache (if it exists)
- name: Remove httpd welcome config
  become: true
  file: path=/etc/httpd/conf.d/welcome.conf state=absent
  register: apache_needs_restart

- name: Bounce Apache
  service: name=httpd state=restarted enabled=true
  become: true
  when: apache_needs_restart.changed

#
# setup the python-carbon service
#

- name: Setup carbon-cache service
  service: name=carbon-cache state=started enabled=true
  become: true

- name: copy carbon storage schema config
  copy:
    src=storage-schemas.conf
    dest=/etc/carbon/storage-schemas.conf
    owner=root
    group=root
    mode=0644
  become: true
  register: carbon_cache_needs_restart

- name: copy carbon storage aggregation config
  copy:
    src=storage-aggregation.conf
    dest=/etc/carbon/storage-aggregation.conf
    owner=root
    group=root
    mode=0644
  become: true
  register: carbon_cache_needs_restart

- name: copy carbon config
  copy:
    src=carbon.conf
    dest=/etc/carbon/carbon.conf
    owner=root
    group=root
    mode=0644
  become: true
  register: carbon_cache_needs_restart

# - name: Disable EPEL Repo
#   ini_file: dest=/etc/yum.repos.d/epel.repo
#     section=epel
#     option=enabled
#     value=0

- name: bounce carbon cache
  service: name=carbon-cache state=restarted enabled=true
  become: true
  when: carbon_cache_needs_restart.changed

# sometimes there's a stale epel package present, so rpm -e fails
# because somebody deleted the .repo files without uninstalling
# epel-release and rpm -e fails to remove multiple versions of the
# package. So we need to check this and remove all one by one
- name: Disable EPEL
  shell: |
    count=$(rpm -q epel-release | wc -l)
    if [[ $count -gt 1 ]]; then
      for ver in `rpm -q epel-release`; do
        rpm -e $ver
      done
    else
      rpm -e epel-release
    fi
  ignore_errors: true
  become: true
  when: offline_install is undefined
