---
#
# Install/run grafana-server for satellite
#

#
# Check variables
#
- assert:
    that: "groups['graphite']|length == 1"
    msg: "Graphite server not specified or too many of them specified"
- assert:
    that: "groups['grafana']|length == 1"
    msg: "Grafana server not specified or too many of them specified"


- name: Install grafana rpms online
  yum:
    name: https://grafanarel.s3.amazonaws.com/builds/grafana-2.6.0-1.x86_64.rpm
    state: present
  become: true
  when: offline_install is undefined

- name: Install grafana rpms offline
  yum:
    name: grafana
    state: present
  become: true
  with_items:
    - grafana
  when: offline_install is defined

- name: Set grafana server port
  ini_file:
    dest=/etc/grafana/grafana.ini
    section={{item.section}}
    option={{item.option}}
    value={{item.value}}
  with_items:
    - section: server
      option: http_port
      value: "{{grafana_port}}"
    - section: auth.anonymous
      option: enabled
      value: true
  become: true

# disable firewalld (might need to create specific firewall rules or leave it to admin to do via iptables)

- name: disable firewalld
  service: name=firewalld state=stopped enabled=false
  become: true
  ignore_errors: true

#
# setup the grafana-server service
#
- name: Setup grafana-server service
  service: name=grafana-server state=started enabled=true
  become: true
  ignore_errors: true

- name: Wait for grafana to be ready
  wait_for: host=localhost port={{grafana_port}} delay=5 timeout=30

- name: Stop firewall services
  service:
    name: "{{ item }}"
    enabled: no
    state: stopped
  loop:
    - iptables
    - firewalld
  ignore_errors: yes

#
# Add graphite server as a default datasource
#
- name: Ensure {{role_path}}/files directory exists
  file: path={{role_path}}/files state=directory
  connection: local

- name: Create data_source.json
  template:
    src: data_source.json.j2
    dest: "/root/data_source.json"

- name: Create Data Source on grafana server
  command: "curl -X POST -H 'Content-Type: application/json' -d @/root/data_source.json http://{{grafana_username}}:{{grafana_password}}@{{groups['grafana']|first}}:{{grafana_port}}/api/datasources"

- name: Remove leftover json file
  file:
    path: /root/data_source.json
    state: absent

# - name: Disable EPEL Repo
#  ini_file: dest=/etc/yum.repos.d/epel.repo
#    section=epel
#    option=enabled
#    value=0
